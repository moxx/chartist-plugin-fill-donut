{"version":3,"sources":["chartist-plugin-fill-donut.js"],"names":["root","factory","define","amd","exports","module","require","Chartist","this","window","document","defaultOptions","fillClass","label","html","class","items","plugins","fillDonut","options","extend","chart","Pie","$chart","angular","element","container","css","$svg","on","data","type","index","find","eq","$clone","group","_node","clone","attr","forEach","value","remove","removeAttr","prepend","itemIndex","fillDonutOptions","key","$wrapper","addClass","item","id","content","position","offsetY","offsetX","length","append","cWidth","clientWidth","cHeight","clientHeight","wWidth","wHeight","style","bottom","left","top","right","center"],"mappings":"CAAE,SAASA,EAAMC,GACO,kBAAXC,SAAyBA,OAAOC,IACzCD,QAAQ,YAAaD,GACO,gBAAZG,SAChBC,OAAOD,QAAUH,EAAQK,QAAQ,aAEjCN,EAAK,8BAAgCC,EAAQD,EAAKO,WAEpDC,KAAM,SAASD,GA0HjB,MAnHC,UAASE,EAAQC,EAAUH,GACxB,YAEA,IAAII,IACAC,UAAW,gBACXC,OACIC,KAAM,cACNC,QAAO,4BAEXC,WAGJT,GAASU,QAAUV,EAASU,YAC5BV,EAASU,QAAQC,UAAY,SAASC,GAElC,MADAA,GAAUZ,EAASa,UAAWT,EAAgBQ,GACvC,SAAmBE,GACtB,GAAGA,YAAiBd,GAASe,IAAK,CAC9B,GAAIC,GAASC,QAAQC,QAAQJ,EAAMK,UACnCH,GAAOI,IAAI,WAAY,WACvB,IAAIC,EAEJP,GAAMQ,GAAG,OAAQ,SAASC,GACtB,GAAiB,UAAdA,EAAKC,KAAiB,CACH,IAAfD,EAAKE,QACJJ,EAAOL,EAAOU,KAAK,OAAOC,GAAG,GAGjC,IAAIC,GAASX,QAAQC,QAAQD,QAAQC,QAAQK,EAAKM,MAAMC,OAAOC,QAC/DH,GAAOI,KAAK,QAASJ,EAAOI,KAAK,SAAW,IAAMpB,EAAQP,WAE1DY,QAAQgB,QAAQL,EAAOF,KAAK,QAAS,SAASQ,GAC1CjB,QAAQC,QAAQgB,GAAOR,KAAK,WAAWS,SACvClB,QAAQC,QAAQgB,GAAOE,WAAW,uBAEtCf,EAAKgB,QAAQT,MAIrBd,EAAMQ,GAAG,UAAW,SAASC,GACzB,GAAIe,GAAY,CAEbxB,GAAMF,QAAQ2B,mBACb3B,EAAUZ,EAASa,UAAWD,EAASE,EAAMF,QAAQ2B,mBAGzDtB,QAAQgB,QAAQrB,EAAQH,MAAO,SAASyB,EAAOM,GAC3C,GAAIC,GAAYxB,QAAQC,QAAQN,EAAQN,MAAMC,MAAMmC,SAAS9B,EAAQN,MAARM,UACzD+B,EAAO1B,QAAQJ,WACfL,QAAQ,GACRoC,GAAI,GACJC,QAAU,WACVC,SAAU,SACVC,QAAS,EACTC,QAAS,GACVd,EAEWjB,SAAQC,SAEnByB,GAAKC,GAAGK,OAAS,GAChBR,EAAST,KAAK,KAAMW,EAAKC,IAE1BD,EAAAA,SAAWM,OAAS,GACnBR,EAASC,SAAS,QAASC,EAAAA,UAG/B3B,EAAOU,KAAK,4BAA4BY,EAAU,MAAMH,SACxDM,EAAST,KAAK,kBAAkB,QAAQM,GACxCA,GAAa,EAEbG,EAASS,OAAOP,EAAKE,SAASzB,KAC1B0B,SAAW,aAGf9B,EAAOkC,OAAOT,EAGd,IAAIU,GAASnC,EAAO,GAAGoC,YAAc,EACjCC,EAAUrC,EAAO,GAAGsC,aAAe,EACnCC,EAASd,EAAS,GAAGW,YAAc,EACnCI,EAAUf,EAAS,GAAGa,aAAe,EAErCG,GACAC,QACIA,OAAU,EAAIf,EAAKI,QAAW,KAC9BY,KAAOR,EAASI,EAAUZ,EAAKK,QAAU,MAE7CY,KACIA,IAAM,EAAKjB,EAAKI,QAAU,KAC1BY,KAAOR,EAASI,EAAUZ,EAAKK,QAAU,MAE7CW,MACIC,IAAOP,EAAUG,EAAWb,EAAKI,QAAU,KAC3CY,KAAM,EAAIhB,EAAKK,QAAU,MAE7Ba,OACID,IAAOP,EAAUG,EAAWb,EAAKI,QAAU,KAC3Cc,MAAO,EAAIlB,EAAKK,QAAU,MAE9Bc,QACIF,IAAOP,EAAUG,EAAWb,EAAKI,QAAU,KAC3CY,KAAOR,EAASI,EAAUZ,EAAKK,QAAU,MAIjDP,GAASrB,IAAIqC,EAAMd,EAAKG,mBAO9C5C,OAAQC,SAAUH,GAIbA,EAASU,QAAQC","file":"chartist-plugin-fill-donut.min.js","sourcesContent":[";(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define(['chartist'], factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory(require('chartist'));\n  } else {\n    root['Chartist.plugins.fillDonut'] = factory(root.Chartist);\n  }\n}(this, function(Chartist) {\n/**\r\n * Chartist.js plugin to pre fill donouts with animations\r\n * author: moxx\r\n * author-url: https://github.com/moxx/chartist-plugin-fill-donut\r\n *\r\n */\r\n(function(window, document, Chartist) {\r\n    'use strict';\r\n\r\n    var defaultOptions = {\r\n        fillClass: 'ct-fill-donut',\r\n        label : {\r\n            html: '<div></div>',\r\n            class: 'ct-fill-donut-label test'\r\n        },\r\n        items : [{}]\r\n    };\r\n\r\n    Chartist.plugins = Chartist.plugins || {};\r\n    Chartist.plugins.fillDonut = function(options) {\r\n        options = Chartist.extend({}, defaultOptions, options);\r\n        return function fillDonut(chart){\r\n            if(chart instanceof Chartist.Pie) {\r\n                var $chart = angular.element(chart.container);\r\n                $chart.css('position', 'relative');\r\n                var $svg;\r\n\r\n                chart.on('draw', function(data) {\r\n                    if(data.type === 'slice'){\r\n                        if(data.index === 0){\r\n                            $svg = $chart.find('svg').eq(0);\r\n                        }\r\n\r\n                        var $clone = angular.element(angular.element(data.group._node).clone());\r\n                        $clone.attr('class', $clone.attr('class') + ' ' + options.fillClass);\r\n\r\n                        angular.forEach($clone.find('path'), function(value){\r\n                            angular.element(value).find('animate').remove();\r\n                            angular.element(value).removeAttr('stroke-dashoffset');\r\n                        });\r\n                        $svg.prepend($clone);\r\n                    }\r\n                });\r\n\r\n                chart.on('created', function(data){\r\n                    var itemIndex = 0;\r\n\r\n                    if(chart.options.fillDonutOptions){\r\n                        options = Chartist.extend({}, options, chart.options.fillDonutOptions);\r\n                    }\r\n\r\n                    angular.forEach(options.items, function(value, key){\r\n                        var $wrapper =  angular.element(options.label.html).addClass(options.label.class);\r\n                        var item = angular.extend({}, {\r\n                            class : '',\r\n                            id: '',\r\n                            content : 'fillText',\r\n                            position: 'center', //bottom, top, left, right\r\n                            offsetY: 0, //top, bottom in px\r\n                            offsetX: 0 //left, right in px\r\n                        }, value);\r\n\r\n                        var content = angular.element();\r\n\r\n                        if(item.id.length > 0){\r\n                            $wrapper.attr('id', item.id);\r\n                        }\r\n                        if(item.class.length > 0){\r\n                            $wrapper.addClass('class', item.class);\r\n                        }\r\n\r\n                        $chart.find('*[data-fill-index$=\"fdid-'+itemIndex+'\"]').remove();\r\n                        $wrapper.attr('data-fill-index','fdid-'+itemIndex);\r\n                        itemIndex += 1;\r\n\r\n                        $wrapper.append(item.content).css({\r\n                            position : 'absolute'\r\n                        });\r\n\r\n                        $chart.append($wrapper);\r\n\r\n\r\n                        var cWidth = $chart[0].clientWidth / 2;\r\n                        var cHeight = $chart[0].clientHeight / 2;\r\n                        var wWidth = $wrapper[0].clientWidth / 2;\r\n                        var wHeight = $wrapper[0].clientHeight / 2;\r\n\r\n                        var style = {\r\n                            bottom : {\r\n                                bottom : (0 + item.offsetY) + 'px',\r\n                                left: (cWidth - wWidth) + item.offsetX + 'px',\r\n                            },\r\n                            top : {\r\n                                top : 0  + item.offsetY + 'px',\r\n                                left: (cWidth - wWidth) + item.offsetX + 'px',\r\n                            },\r\n                            left : {\r\n                                top : (cHeight - wHeight) + item.offsetY + 'px',\r\n                                left: 0 + item.offsetX + 'px',\r\n                            },\r\n                            right : {\r\n                                top : (cHeight - wHeight) + item.offsetY + 'px',\r\n                                right: 0 + item.offsetX + 'px',\r\n                            },\r\n                            center : {\r\n                                top : (cHeight - wHeight) + item.offsetY + 'px',\r\n                                left: (cWidth - wWidth) + item.offsetX + 'px',\r\n                            }\r\n                        };\r\n\r\n                        $wrapper.css(style[item.position]);\r\n                    });\r\n                });\r\n            }\r\n        };\r\n    };\r\n\r\n}(window, document, Chartist));\r\n\r\n//# sourceMappingURL=chartist-plugin-fill-donut.js.map\r\n\nreturn Chartist.plugins.fillDonut;\n}));\n"]}