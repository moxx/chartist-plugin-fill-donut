{"version":3,"names":[],"mappings":"","sources":["chartist-plugin-fill-donut.js"],"sourcesContent":["/**\r\n * Chartist.js plugin to pre fill donouts with animations\r\n * author: moxx\r\n * author-url: https://github.com/moxx/chartist-plugin-fill-donut\r\n *\r\n */\r\n(function(window, document, Chartist) {\r\n    'use strict';\r\n\r\n    var defaultOptions = {\r\n        fillClass: 'ct-fill-donut',\r\n        label : {\r\n            html: '<div></div>',\r\n            class: 'ct-fill-donut-label test'\r\n        },\r\n        items : [{}]\r\n    };\r\n\r\n    Chartist.plugins = Chartist.plugins || {};\r\n    Chartist.plugins.fillDonut = function(options) {\r\n        options = Chartist.extend({}, defaultOptions, options);\r\n        return function fillDonut(chart){\r\n            if(chart instanceof Chartist.Pie) {\r\n                var $chart = angular.element(chart.container);\r\n                $chart.css('position', 'relative');\r\n                var $svg;\r\n\r\n                chart.on('draw', function(data) {\r\n                    if(data.type === 'slice'){\r\n                        if(data.index === 0){\r\n                            $svg = $chart.find('svg').eq(0);\r\n                        }\r\n\r\n                        var $clone = angular.element(angular.element(data.group._node).clone());\r\n                        $clone.attr('class', $clone.attr('class') + ' ' + options.fillClass);\r\n\r\n                        angular.forEach($clone.find('path'), function(value){\r\n                            angular.element(value).find('animate').remove();\r\n                            angular.element(value).removeAttr('stroke-dashoffset');\r\n                        });\r\n                        $svg.prepend($clone);\r\n                    }\r\n                });\r\n\r\n                chart.on('created', function(data){\r\n                    var itemIndex = 0;\r\n\r\n                    if(chart.options.fillDonutOptions){\r\n                        options = Chartist.extend({}, options, chart.options.fillDonutOptions);\r\n                    }\r\n\r\n                    angular.forEach(options.items, function(value, key){\r\n                        var $wrapper =  angular.element(options.label.html).addClass(options.label.class);\r\n                        var item = angular.extend({}, {\r\n                            class : '',\r\n                            id: '',\r\n                            content : 'fillText',\r\n                            position: 'center', //bottom, top, left, right\r\n                            offsetY: 0, //top, bottom in px\r\n                            offsetX: 0 //left, right in px\r\n                        }, value);\r\n\r\n                        var content = angular.element();\r\n\r\n                        if(item.id.length > 0){\r\n                            $wrapper.attr('id', item.id);\r\n                        }\r\n                        if(item.class.length > 0){\r\n                            $wrapper.addClass('class', item.class);\r\n                        }\r\n\r\n                        $chart.find('*[data-fill-index$=\"fdid-'+itemIndex+'\"]').remove();\r\n                        $wrapper.attr('data-fill-index','fdid-'+itemIndex);\r\n                        itemIndex += 1;\r\n\r\n                        $wrapper.append(item.content).css({\r\n                            position : 'absolute'\r\n                        });\r\n\r\n                        $chart.append($wrapper);\r\n\r\n\r\n                        var cWidth = $chart[0].clientWidth / 2;\r\n                        var cHeight = $chart[0].clientHeight / 2;\r\n                        var wWidth = $wrapper[0].clientWidth / 2;\r\n                        var wHeight = $wrapper[0].clientHeight / 2;\r\n\r\n                        var style = {\r\n                            bottom : {\r\n                                bottom : (0 + item.offsetY) + 'px',\r\n                                left: (cWidth - wWidth) + item.offsetX + 'px',\r\n                            },\r\n                            top : {\r\n                                top : 0  + item.offsetY + 'px',\r\n                                left: (cWidth - wWidth) + item.offsetX + 'px',\r\n                            },\r\n                            left : {\r\n                                top : (cHeight - wHeight) + item.offsetY + 'px',\r\n                                left: 0 + item.offsetX + 'px',\r\n                            },\r\n                            right : {\r\n                                top : (cHeight - wHeight) + item.offsetY + 'px',\r\n                                right: 0 + item.offsetX + 'px',\r\n                            },\r\n                            center : {\r\n                                top : (cHeight - wHeight) + item.offsetY + 'px',\r\n                                left: (cWidth - wWidth) + item.offsetX + 'px',\r\n                            }\r\n                        };\r\n\r\n                        $wrapper.css(style[item.position]);\r\n                    });\r\n                });\r\n            }\r\n        };\r\n    };\r\n\r\n}(window, document, Chartist));\r\n\r\n//# sourceMappingURL=chartist-plugin-fill-donut.js.map\r\n"],"file":"chartist-plugin-fill-donut.js"}